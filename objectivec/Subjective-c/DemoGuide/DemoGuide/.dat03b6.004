/*
This file was autogenerated with SubjectiveParser 2.0.
Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
*/

/*
This file was autogenerated with SubjectiveParser 2.0.
Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
*/

/*
This file was autogenerated with SubjectiveParser 2.0.
Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
*/

/*
This file was autogenerated with SubjectiveParser 2.0.
Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
*/

/*
This file was autogenerated with SubjectiveParser 2.0.
Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
*/

/*
This file was autogenerated with SubjectiveParser 2.0.
Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
*/

/*
This file was autogenerated with SubjectiveParser 2.0.
Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
*/

/*
This file was autogenerated with SubjectiveParser 2.0.
Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
*/

/*
This file was autogenerated with SubjectiveParser 2.0.
Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
*/

/*
This file was autogenerated with SubjectiveParser 2.0.
Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
*/

/*
This file was autogenerated with SubjectiveParser 2.0.
Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
*/

/*
This file was autogenerated with SubjectiveParser 2.0.
Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
*/


/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

/*
 This file was autogenerated with SubjectiveParser 2.0.
 Base file: /Users/guillaumekaisin/Dropbox/Mémoire/code/tests/DemoGuide/DemoGuide/POIViewController.m.
 */

//
//  POIViewController.m
//  DemoGuide
//
//  Created by Kim Mens on 12/11/11.
//  Copyright 2011 __MyCompanyName__. All rights reserved.
//

#import "POIViewController.h"
#import "Poi.h"
#import "Description.h"

@implementation POIViewController
@synthesize poiCell;
@synthesize appDelegate;
@synthesize descView;
@synthesize categoryPoiDict;

- (id)initWithStyle:(UITableViewStyle)style
{
    self = [super initWithStyle:style];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

- (void)viewDidLoad
{
    self.appDelegate = (DemoGuideAppDelegate *)[[UIApplication sharedApplication] delegate];
    self.categoryPoiDict = [[NSMutableDictionary alloc] init];
    
    /* Create dictionary with key=category and object=array of poi */
    for(CategoryPoi * cat in [self.appDelegate.cacheManager categoryList]){
        NSMutableArray * poiArray = [[NSMutableArray alloc] init];
        for(Poi * p in [self.appDelegate.cacheManager poisList]){
            NSMutableArray * pCategories = [p categories];
            if([pCategories containsObject:cat]){
                [poiArray addObject:p];
            }
        }
        [self.categoryPoiDict setObject:poiArray forKey:[cat idString]];
        [poiArray release];
    }
    [super viewDidLoad];
    
    // Uncomment the following line to preserve selection between presentations.
    // self.clearsSelectionOnViewWillAppear = NO;
    
    // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
    // self.navigationItem.rightBarButtonItem = self.editButtonItem;
}

- (void)viewDidUnload
{
    [self setPoiCell:nil];
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self.tableView reloadData];
    
}

- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
}

- (void)viewDidDisappear:(BOOL)animated
{
    [super viewDidDisappear:animated];
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

#pragma mark - Table view data source


- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    // Return the number of sections.
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {

    // Return the number of rows in the section.
    NSMutableArray * poisList = [[self.appDelegate cacheManager] poisList];
    return [poisList count];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {

    static NSString *CellIdentifier = @"Cell";
    NSMutableArray * poisList = [[self.appDelegate cacheManager] poisList];
    Poi * curPoi = [poisList objectAtIndex:indexPath.row];
    
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        /*cell = [[[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier] autorelease];*/
        [[NSBundle mainBundle] loadNibNamed:@"POIViewCell" owner:self options:nil];
        cell = poiCell;
        self.poiCell = nil;
    }
    
    // Configure the cell...
    /*cell.textLabel.text = [curPoi name];
     UIImageView * poiImage = [[UIImageView alloc] initWithImage:[curPoi imagePoi]];
     [cell.contentView addSubview:poiImage];
     [poiImage release];*/
    UILabel * titleLabel = (UILabel *)[cell viewWithTag:TITLE_TAG];
    UILabel * subTitle = (UILabel *)[cell viewWithTag:SUBTITLE_TAG];
    UIImageView * poiImage = (UIImageView *)[cell viewWithTag:IMAGE_TAG];
    
    titleLabel.text = [curPoi name];
    subTitle.text = [curPoi category];
    poiImage.image = [curPoi image];
    
    cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    
    return cell;
}

-(CGFloat) tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return 80;
}

/*
 // Override to support conditional editing of the table view.
 - (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath
 {
 // Return NO if you do not want the specified item to be editable.
 return YES;
 }
 */

/*
 // Override to support editing the table view.
 - (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath
 {
 if (editingStyle == UITableViewCellEditingStyleDelete) {
 // Delete the row from the data source
 [tableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:UITableViewRowAnimationFade];
 }   
 else if (editingStyle == UITableViewCellEditingStyleInsert) {
 // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
 }   
 }
 */

/*
 // Override to support rearranging the table view.
 - (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)fromIndexPath toIndexPath:(NSIndexPath *)toIndexPath
 {
 }
 */

/*
 // Override to support conditional rearranging of the table view.
 - (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath
 {
 // Return NO if you do not want the item to be re-orderable.
 return YES;
 }
 */

#pragma mark - Table view delegate

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    // Navigation logic may go here. Create and push another view controller.
    NSMutableArray * poisList = [[self.appDelegate cacheManager] poisList];
    Poi * curPoi = [poisList objectAtIndex:indexPath.row];
    Description * curDesc = [curPoi description];
    
    if(self.descView == nil){
        DescViewController * viewController = [[DescViewController alloc] initWithNibName:@"DescViewController" bundle:nil];
        self.descView = viewController;
        [viewController release];
        [self.descView viewDidLoad];
    }
	[self.navigationController pushViewController:self.descView animated:YES];       
    //Set view attributes
    self.descView.descTextString = [curDesc text];
    self.descView.titleString = [curPoi name];
    self.descView.addressString = [NSString stringWithFormat:@"%@\n%@",[curPoi address], @"1348 Louvain La Neuve"];
    self.descView.imageDesc = [curPoi imagePoi];
    self.descView.subtitleString = [curPoi category];
    [self.descView setupView];
}

- (void)dealloc {
    [poiCell release];
    [super dealloc];
}
@end
